{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../../../test/api/mandates/index.test.ts"],"names":[],"mappings":";;;;;AAAA,kDAAyB;AACzB,sCAA6C;AAC7C,2EAAuE;AAEvE,iCAAwC;AACxC,MAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA;AAGzC,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAA;AACjC,MAAM,eAAe,GAAG,IAAI,iCAAe,CAAC,SAAS,CAAC,CAAA;AAEtD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAI,GAAQ,CAAA;IACZ,IAAI,OAAkB,CAAA;IACtB,IAAI,EAAQ,CAAA;IAEZ,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,EAAE,GAAG,MAAM,oBAAe,EAAE,CAAA;QAC5B,GAAG,GAAG,IAAI,SAAG,CAAC,eAAe,CAAC,CAAA;QAC9B,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QAChB,OAAO,GAAG,MAAM,eAAS,CAAC,KAAK,EAAE,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAA;QAChK,MAAM,eAAS,CAAC,KAAK,EAAE,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,QAAQ,EAAE,mCAAmC,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;QACpM,MAAM,eAAS,CAAC,KAAK,EAAE,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAA;IACtJ,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,GAAG,CAAC,QAAQ,EAAE,CAAA;QACd,MAAM,eAAS,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAA;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAA;IACpB,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAA;QAE3E,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QACtC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAC9C,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QACpC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;QACrD,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;QACvD,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IAChD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import axios from 'axios'\nimport { App, Agreement } from '../../../src'\nimport { AgreementBucket } from \"../../../src/services/agreementBucket\"\nimport Knex from 'knex'\nimport {refreshDatabase} from \"../../db\"\nconst MockRedis = require('ioredis-mock')\n\n\nconst mockRedis = new MockRedis()\nconst agreementBucket = new AgreementBucket(mockRedis)\n\ndescribe('Index mandates', () => {\n  let app: App\n  let mandate: Agreement\n  let db: Knex\n\n  beforeEach(async () => {\n    db = await refreshDatabase()\n    app = new App(agreementBucket)\n    app.listen(4000)\n    mandate = await Agreement.query().insertAndFetch({ scope: '$wallet.example/alice', amount: '100', assetCode: 'USD', assetScale: 2, userId: 4, type: 'mandate' })\n    await Agreement.query().insertAndFetch({ scope: '$wallet.example/alice', callback: 'http://localhost:3000/ilpcallback', amount: '100', assetCode: 'USD', assetScale: 2, userId: 4, type: 'intent' })\n    await Agreement.query().insertAndFetch({ scope: '$wallet.example/bob', amount: '100', assetCode: 'USD', assetScale: 2, userId: 5, type: 'mandate' })\n  })\n\n  afterEach(async () => {\n    app.shutdown()\n    await Agreement.query().delete()\n    await db.destroy()\n  })\n\n  test('can retrieve mandates for users wallet account', async () => {\n    const { data } = await axios.get('http://localhost:4000/mandates?userId=4')\n\n    expect(data.length).toEqual(1)\n    expect(data[0].id).toEqual(mandate.id)\n    expect(data[0].amount).toEqual(mandate.amount)\n    expect(data[0].balance).toEqual(100)\n    expect(data[0].asset.code).toEqual(mandate.assetCode)\n    expect(data[0].asset.scale).toEqual(mandate.assetScale)\n    expect(data[0].userId).toEqual(mandate.userId)\n  })\n})\n"]}