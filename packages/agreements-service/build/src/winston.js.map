{"version":3,"file":"winston.js","sourceRoot":"","sources":["../../src/winston.ts"],"names":[],"mappings":";;;;;;;;;AASA,iDAAkC;AAElC,MAAM,GAAG,GAAG;IACV,KAAK,EAAE,CAAC,OAA4B,EAAkB,EAAE;QACtD,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,MAAM,CAAA;QACnD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;QAKnC,OAAO,KAAK,CAAA;IACd,CAAC;CACF,CAAA;AACQ,kBAAG","sourcesContent":["/**\n * Polyfill until https://github.com/winstonjs/winston/pull/1603 is released\n *\n * For now use `import { log } from './winston'`\n * In future we'll use `import * as log from 'winston'`\n *\n * component.ts - `const logger = log.child({component: 'component-name'})`\n */\n\nimport * as winston from 'winston'\n\nconst log = {\n  child: (options: Record<string, any>): winston.Logger => {\n    const logger = winston['default'].exceptions.logger\n    const child = logger.child(options)\n    // TODO: Consider adding a transport that writes to debug if this is enabled for the component\n    // if (options['component'] && debug.enabled(options['component'])) {\n    //   debug(options['component']).log = child.debug\n    // }\n    return child\n  }\n}\nexport { log }\n"]}